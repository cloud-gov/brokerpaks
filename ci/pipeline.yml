jobs:
  - name: set-self
    plan:
      - get: src
        trigger: true
      - set_pipeline: self
        file: src/ci/pipeline.yml

  - name: terraform-plan-apps-development
    plan:
      - in_parallel:
          - get: terraform-templates
            resource: terraform-config
            trigger: true
          - get: src
            resource: src
            trigger: true # rebuild when pipeline changes
            passed: [set-self]
          # Changes to the iaas state file trigger a build. This is not a step
          # input because the state is accessed separately using a
          # terraform_remote_state data source.
          - get: terraform-yaml
            resource: terraform-yaml-development
            trigger: true
          - get: pipeline-tasks
          - get: general-task
          - get: csb-image
            trigger: true
          - get: csb-helper-image
            trigger: true
      - in_parallel:
          - load_var: csb-image-repository
            file: csb-image/repository
          - load_var: csb-image-digest
            file: csb-image/digest
          - load_var: csb-helper-image-repository
            file: csb-helper-image/repository
          - load_var: csb-helper-image-digest
            file: csb-helper-image/digest
      - task: terraform-plan
        image: general-task
        file: terraform-templates/ci/terraform/terraform-apply.yml
        params: &tf-apps-development
          TERRAFORM_ACTION: plan
          TEMPLATE_SUBDIR: ci/terraform/stack
          STACK_NAME: cf-apps-development
          S3_TFSTATE_BUCKET: ((tf-state-bucket))
          AWS_DEFAULT_REGION: ((aws-region))
          CF_API_URL: ((cf-api-url-development))
          CF_CLIENT_ID: ((cf-client-id-development))
          CF_CLIENT_SECRET: ((cf-client-secret-development))
          TF_VAR_csb_aws_region_commercial: ((csb-aws-region-commercial))
          TF_VAR_csb_aws_region_govcloud: ((aws-region))
          TF_VAR_csb_aws_ses_default_zone: appmail.dev.us-gov-west-1.aws-us-gov.cloud.gov
          TF_VAR_csb_broker_route_domain: ((csb-broker-route-domain-development))
          TF_VAR_csb_docker_image_name: "((.:csb-image-repository))"
          TF_VAR_csb_docker_image_version: "@((.:csb-image-digest))"
          TF_VAR_csb_helper_docker_image_name: "((.:csb-helper-image-repository))"
          TF_VAR_csb_helper_docker_image_version: "@((.:csb-helper-image-digest))"
          TF_VAR_csb_docproxy_domain: dev.us-gov-west-1.aws-us-gov.cloud.gov
          TF_VAR_csb_org_name: ((csb-org-name))
          TF_VAR_csb_space_name: ((csb-space-name))
          TF_VAR_external_remote_state_reader_access_key_id: ((development-tf-state-access-key-id))
          TF_VAR_external_remote_state_reader_region: ((development-tf-state-region))
          TF_VAR_external_remote_state_reader_secret_access_key: ((development-tf-state-secret-access-key))
          TF_VAR_external_stack_name: external-development
          TF_VAR_remote_state_bucket_external: ((tf-state-bucket-external))
          TF_VAR_remote_state_bucket_iaas: ((tf-state-bucket))
          TF_VAR_stack_name: development
      - put: slack
        params:
          text_file: terraform-state/message.txt
          text: |
            :terraform: $BUILD_JOB_NAME needs review
            <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
          channel: "#cg-customer-success"
          username: ((slack-username))
          icon_url: ((slack-icon-url))

  - name: terraform-apply-apps-development
    plan:
      - in_parallel:
          - get: terraform-templates
            resource: terraform-config
            passed: [terraform-plan-apps-development]
            trigger: true
          - get: pipeline-tasks
          - get: general-task
          - get: csb-image
            trigger: true
          - get: csb-helper-image
            trigger: true
      - load_var: csb-image-repository
        file: csb-image/repository
      - load_var: csb-image-digest
        file: csb-image/digest
      - load_var: csb-helper-image-repository
        file: csb-helper-image/repository
      - load_var: csb-helper-image-digest
        file: csb-helper-image/digest
      - task: terraform-apply
        image: general-task
        file: terraform-templates/ci/terraform/terraform-apply.yml
        params:
          <<: *tf-apps-development
          TERRAFORM_ACTION: apply

  - name: terraform-plan-apps-staging
    plan:
      - in_parallel:
          - get: terraform-templates
            resource: terraform-config
            trigger: true
            passed: [terraform-apply-apps-development]
          # Changes to the iaas state file trigger a build. This is not a step
          # input because the state is accessed separately using a
          # terraform_remote_state data source.
          - get: terraform-yaml
            resource: terraform-yaml-staging
            trigger: true
          - get: pipeline-tasks
          - get: general-task
          - get: csb-image
            trigger: true
          - get: csb-helper-image
            trigger: true
      - in_parallel:
          - load_var: csb-image-repository
            file: csb-image/repository
          - load_var: csb-image-digest
            file: csb-image/digest
          - load_var: csb-helper-image-repository
            file: csb-helper-image/repository
          - load_var: csb-helper-image-digest
            file: csb-helper-image/digest
      - task: terraform-plan
        image: general-task
        file: terraform-templates/ci/terraform/terraform-apply.yml
        params: &tf-apps-staging
          TERRAFORM_ACTION: plan
          TEMPLATE_SUBDIR: ci/terraform/stack
          STACK_NAME: cf-apps-staging
          S3_TFSTATE_BUCKET: ((tf-state-bucket))
          AWS_DEFAULT_REGION: ((aws-region))
          CF_API_URL: ((cf-api-url-staging))
          CF_CLIENT_ID: ((cf-client-id-staging))
          CF_CLIENT_SECRET: ((cf-client-secret-staging))
          TF_VAR_csb_aws_region_commercial: ((csb-aws-region-commercial))
          TF_VAR_csb_aws_region_govcloud: ((aws-region))
          TF_VAR_csb_aws_ses_default_zone: appmail.fr-stage.cloud.gov
          TF_VAR_csb_broker_route_domain: ((csb-broker-route-domain-staging))
          TF_VAR_csb_docker_image_name: "((.:csb-image-repository))"
          TF_VAR_csb_docker_image_version: "@((.:csb-image-digest))"
          TF_VAR_csb_helper_docker_image_name: "((.:csb-helper-image-repository))"
          TF_VAR_csb_helper_docker_image_version: "@((.:csb-helper-image-digest))"
          TF_VAR_csb_docproxy_domain: fr-stage.cloud.gov
          TF_VAR_csb_org_name: ((csb-org-name))
          TF_VAR_csb_space_name: ((csb-space-name))
          TF_VAR_external_remote_state_reader_access_key_id: ((staging-tf-state-access-key-id))
          TF_VAR_external_remote_state_reader_region: ((staging-tf-state-region))
          TF_VAR_external_remote_state_reader_secret_access_key: ((staging-tf-state-secret-access-key))
          TF_VAR_external_stack_name: external-staging
          TF_VAR_remote_state_bucket_external: ((tf-state-bucket-external))
          TF_VAR_remote_state_bucket_iaas: ((tf-state-bucket))
          TF_VAR_stack_name: staging
      - put: slack
        params:
          text_file: terraform-state/message.txt
          text: |
            :terraform: $BUILD_JOB_NAME needs review
            <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
          channel: "#cg-customer-success"
          username: ((slack-username))
          icon_url: ((slack-icon-url))

  - name: terraform-apply-apps-staging
    plan:
      - in_parallel:
          - get: terraform-templates
            resource: terraform-config
            trigger: true
            passed: [terraform-plan-apps-staging]
          - get: pipeline-tasks
          - get: general-task
          - get: csb-image
            trigger: true
          - get: csb-helper-image
            trigger: true
      - load_var: csb-image-repository
        file: csb-image/repository
      - load_var: csb-image-digest
        file: csb-image/digest
      - load_var: csb-helper-image-repository
        file: csb-helper-image/repository
      - load_var: csb-helper-image-digest
        file: csb-helper-image/digest
      - task: terraform-apply
        image: general-task
        file: terraform-templates/ci/terraform/terraform-apply.yml
        params:
          <<: *tf-apps-staging
          TERRAFORM_ACTION: apply

  - name: terraform-plan-apps-production
    plan:
      - in_parallel:
          - get: terraform-templates
            resource: terraform-config
            passed: [terraform-apply-apps-staging]
            trigger: true
          # Changes to the iaas state file trigger a build. This is not a step
          # input because the state is accessed separately using a
          # terraform_remote_state data source.
          - get: terraform-yaml
            resource: terraform-yaml-production
            trigger: true
          - get: pipeline-tasks
          - get: general-task
          - get: csb-image
            trigger: true
          - get: csb-helper-image
            trigger: true
      - in_parallel:
          - load_var: csb-image-repository
            file: csb-image/repository
          - load_var: csb-image-digest
            file: csb-image/digest
          - load_var: csb-helper-image-repository
            file: csb-helper-image/repository
          - load_var: csb-helper-image-digest
            file: csb-helper-image/digest
      - task: terraform-plan
        image: general-task
        file: terraform-templates/ci/terraform/terraform-apply.yml
        params: &tf-apps-production
          TERRAFORM_ACTION: plan
          TEMPLATE_SUBDIR: ci/terraform/stack
          STACK_NAME: cf-apps-production
          S3_TFSTATE_BUCKET: ((tf-state-bucket))
          AWS_DEFAULT_REGION: ((aws-region))
          CF_API_URL: ((cf-api-url-production))
          CF_CLIENT_ID: ((cf-client-id-production))
          CF_CLIENT_SECRET: ((cf-client-secret-production))
          TF_VAR_csb_aws_region_commercial: ((csb-aws-region-commercial))
          TF_VAR_csb_aws_region_govcloud: ((aws-region))
          TF_VAR_csb_aws_ses_default_zone: appmail.cloud.gov
          TF_VAR_csb_broker_route_domain: ((csb-broker-route-domain-production))
          TF_VAR_csb_docker_image_name: "((.:csb-image-repository))"
          TF_VAR_csb_docker_image_version: "@((.:csb-image-digest))"
          TF_VAR_csb_helper_docker_image_name: "((.:csb-helper-image-repository))"
          TF_VAR_csb_helper_docker_image_version: "@((.:csb-helper-image-digest))"
          TF_VAR_csb_docproxy_domain: fr.cloud.gov
          TF_VAR_csb_helper_instances: 2
          TF_VAR_csb_org_name: ((csb-org-name))
          TF_VAR_csb_space_name: ((csb-space-name))
          TF_VAR_external_remote_state_reader_access_key_id: ((production-tf-state-access-key-id))
          TF_VAR_external_remote_state_reader_region: ((production-tf-state-region))
          TF_VAR_external_remote_state_reader_secret_access_key: ((production-tf-state-secret-access-key))
          TF_VAR_external_stack_name: external-production
          TF_VAR_remote_state_bucket_external: ((tf-state-bucket-external))
          TF_VAR_remote_state_bucket_iaas: ((tf-state-bucket))
          TF_VAR_stack_name: production
      - put: slack
        params:
          text_file: terraform-state/message.txt
          text: |
            :terraform: $BUILD_JOB_NAME needs review
            <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
          channel: "#cg-customer-success"
          username: ((slack-username))
          icon_url: ((slack-icon-url))

  - name: terraform-apply-apps-production
    plan:
      - in_parallel:
          - get: terraform-templates
            resource: terraform-config
            passed: [terraform-plan-apps-production]
          - get: pipeline-tasks
          - get: general-task
          - get: csb-image
            trigger: true
          - get: csb-helper-image
            trigger: true
      - load_var: csb-image-repository
        file: csb-image/repository
      - load_var: csb-image-digest
        file: csb-image/digest
      - load_var: csb-helper-image-repository
        file: csb-helper-image/repository
      - load_var: csb-helper-image-digest
        file: csb-helper-image/digest
      - task: terraform-apply
        image: general-task
        file: terraform-templates/ci/terraform/terraform-apply.yml
        params:
          <<: *tf-apps-production
          TERRAFORM_ACTION: apply

resources:
  - name: pipeline-tasks
    type: git
    source:
      commit_verification_keys: ((cloud-gov-pgp-keys))
      uri: https://github.com/cloud-gov/cg-pipeline-tasks.git
      branch: main

  - name: slack
    type: slack-notification
    source:
      url: ((slack-webhook-url))

  - name: terraform-config
    type: git
    source:
      commit_verification_keys: ((cloud-gov-pgp-keys))
      uri: https://github.com/cloud-gov/csb.git
      branch: brokerpak-topic
      paths:
        - ci/terraform/*

  - name: terraform-yaml-development
    type: s3-iam
    source:
      bucket: ((tf-state-bucket))
      versioned_file: ((tf-state-file-development))
      region_name: ((aws-region))

  - name: terraform-yaml-staging
    type: s3-iam
    source:
      bucket: ((tf-state-bucket))
      versioned_file: ((tf-state-file-staging))
      region_name: ((aws-region))

  - name: terraform-yaml-production
    type: s3-iam
    source:
      bucket: ((tf-state-bucket))
      versioned_file: ((tf-state-file-production))
      region_name: ((aws-region))

  - name: general-task
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: general-task
      aws_region: us-gov-west-1
      tag: latest

  - name: csb-image
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: cg-csb
      aws_region: us-gov-west-1
      tag: latest

  - name: csb-helper-image
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: csb-helper
      aws_region: us-gov-west-1
      tag: latest

  - name: src
    type: git
    source:
      commit_verification_keys: ((cloud-gov-pgp-keys))
      uri: https://github.com/cloud-gov/csb.git
      branch: brokerpak-topic
      paths:
        - ci/*

resource_types:
  - name: registry-image
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: registry-image-resource
      aws_region: us-gov-west-1
      tag: latest

  - name: slack-notification
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: slack-notification-resource
      aws_region: us-gov-west-1
      tag: latest

  - name: git
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: git-resource
      aws_region: us-gov-west-1
      tag: latest

  - name: s3-iam
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: s3-resource
      aws_region: us-gov-west-1
      tag: latest
